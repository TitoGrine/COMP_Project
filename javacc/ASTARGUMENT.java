/* Generated By:JJTree: Do not edit this line. ASTARGUMENT.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTARGUMENT extends SimpleNode {
  public ASTARGUMENT(int id) {
    super(id);
  }

  public ASTARGUMENT(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void addSymbolTable(SymbolTable symbolTable){
    this.symbolTable = new SymbolTable(symbolTable);
  }

  @Override
  public void eval() throws Exception {
    // TODO: Add symbol

    int numChildren = this.jjtGetNumChildren();

    if(!(numChildren == 2))
      throw new Exception("ARGUMENT must have at exactly two children.");

    SimpleNode childNode1 = (SimpleNode) this.jjtGetChild(0);
    SimpleNode childNode2 = (SimpleNode) this.jjtGetChild(1);

    if(childNode1.id != ParserTreeConstants.JJTTYPE)
      throw new Exception("ARGUMENT must have first child of type TYPE.");

    if(childNode2.id != ParserTreeConstants.JJTIDENT)
      throw new Exception("ARGUMENTS must have second child of type IDENT.");

    childNode1.addSymbolTable(this.symbolTable);
    childNode1.eval();

    childNode2.addSymbolTable(this.symbolTable);
    childNode2.eval();
  }
}
/* JavaCC - OriginalChecksum=1c4e5b4ef5eeb3f2188100031b20d30d (do not edit this line) */
