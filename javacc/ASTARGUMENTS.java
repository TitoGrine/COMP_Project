/* Generated By:JJTree: Do not edit this line. ASTARGUMENTS.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTARGUMENTS extends SimpleNode {
  public ASTARGUMENTS(int id) {
    super(id);
  }

  public ASTARGUMENTS(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void addSymbolTable(SymbolTable symbolTable){
    this.symbolTable = new SymbolTable(symbolTable);
  }

  @Override
  public void eval() throws Exception {
    // TODO: Add symbol

    int numChildren = this.jjtGetNumChildren();
    int childIndex = 0;
    SimpleNode childNode;

    if(!(numChildren > 0))
      throw new Exception("ARGUMENTS must have at least one child.");

    while(childIndex < numChildren){
      childNode = (SimpleNode) this.jjtGetChild(childIndex);

      if(childNode.id != ParserTreeConstants.JJTARGUMENT)
        throw new Exception("ARGUMENTS can only have children of type ARGUMENT.");

      childNode.addSymbolTable(this.symbolTable);
      childNode.eval();

      childIndex++;
    }
  }
}
/* JavaCC - OriginalChecksum=4206cf5195297e62078a7d896983dc2e (do not edit this line) */
