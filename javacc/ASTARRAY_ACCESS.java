/* Generated By:JJTree: Do not edit this line. ASTARRAY_ACCESS.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTARRAY_ACCESS extends Operator {
  protected String object;

  public ASTARRAY_ACCESS(int id) {
    super(id);
  }

  public ASTARRAY_ACCESS(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void eval() throws Exception {
    SimpleNode firstChild = (SimpleNode) this.jjtGetChild(0);
    SimpleNode secondChild = (SimpleNode) this.jjtGetChild(1);

    if(firstChild.id == ParserTreeConstants.JJTIDENT){
      this.object = ((ASTIDENT) firstChild).name;
    } else if(firstChild.id == ParserTreeConstants.JJTFUNC_METHOD) {
      firstChild.addSymbolTable(this.symbolTable);
      firstChild.eval();

      this.object = ((ASTFUNC_METHOD) firstChild).call;
    } else
      throw new Exception("Attempted to access a non array object like an array.");

    if(!this.validType(firstChild, TypeEnum.ARRAY))
      throw new Exception("Variable " + this.object + " isn't an array but it's being accessed as one.");

    if(!this.initializedUse(firstChild))
      throw new Exception("Array " + this.object + " is uninstantiated when accessed.");

    if(!this.validType(secondChild, TypeEnum.INT))
      throw new Exception("Access to array " + this.object + " with invalid index.");

    if(!this.initializedUse(secondChild))
      throw new Exception("Access to array " + this.object + " with uninstantiated index value.");
  }
}
/* JavaCC - OriginalChecksum=22f8f358ed3b439b354e0322ba03ff68 (do not edit this line) */
