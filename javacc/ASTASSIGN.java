/* Generated By:JJTree: Do not edit this line. ASTASSIGN.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTASSIGN extends Operator {
  public ASTASSIGN(int id) {
    super(id);
  }

  public ASTASSIGN(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void eval() throws Exception {
    ASTIDENT firstChild = (ASTIDENT) this.jjtGetChild(0);
    SimpleNode secondChild = (SimpleNode) this.jjtGetChild(1);

    String varName = firstChild.name;

    if(!this.symbolTable.existsSymbol(varName)){

      if(!this.symbolTable.existsSymbol("this." + varName)){
        throw new Exception("Trying to assign variable " + varName + " that wasn't previously declared.");
      }

      varName = "this." + varName;
    }

    secondChild.addSymbolTable(this.symbolTable);
    secondChild.eval();

    if(!this.validType(secondChild, this.symbolTable.getSymbol(varName).getType()))
      throw new Exception("Assignment of variable " + firstChild.name + " to incompatible type.");

    if(!this.initializedUse(secondChild))
      throw new Exception("Assignment of variable " + firstChild.name + " to uninstantiated object.");

    this.symbolTable.setInitialized(varName);
  }
}
/* JavaCC - OriginalChecksum=cbade18a4c362fe9b5729b12bfc068fc (do not edit this line) */
