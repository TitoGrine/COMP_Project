import java.util.ArrayList;

/* Generated By:JJTree: Do not edit this line. ASTCALL.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTCALL extends TypeSensitive {
  protected String method;
  protected ArrayList<TypeEnum> arguments = new ArrayList<>();

  public ASTCALL(int id) {
    super(id);
  }

  public ASTCALL(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void eval(SemanticAnalysis analysis){
    int numChildren = this.jjtGetNumChildren();

    ASTIDENT firstChild = (ASTIDENT) this.jjtGetChild(0);

    firstChild.addSymbolTable(this.symbolTable);
    this.method = firstChild.name;

    if(numChildren == 1)
      return;

    ASTARGUMENTS secondChild = (ASTARGUMENTS) this.jjtGetChild(1);

    secondChild.addSymbolTable(this.symbolTable);
    secondChild.eval(analysis);

    this.arguments = secondChild.arguments;
  }
}
/* JavaCC - OriginalChecksum=3c6f955e59ab927fd02fc4b260500e9b (do not edit this line) */
