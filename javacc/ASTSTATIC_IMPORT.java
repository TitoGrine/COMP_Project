import java.util.ArrayList;

/* Generated By:JJTree: Do not edit this line. ASTSTATIC_IMPORT.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTSTATIC_IMPORT extends SimpleNode {

  public ASTSTATIC_IMPORT(int id) {
    super(id);
  }

  public ASTSTATIC_IMPORT(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void eval() throws Exception {
    int numChildren = this.jjtGetNumChildren();

    ASTIDENT firstChild = (ASTIDENT) this.jjtGetChild(0);
    ASTIDENT secondChild = (ASTIDENT) this.jjtGetChild(1);

    String key = firstChild.name + '.' + secondChild.name;

    TypeEnum returnType = TypeEnum.VOID;
    ArrayList<TypeEnum> parameters = new ArrayList<>();

    if(numChildren < 3){
      this.symbolTable.addSymbol(key, new MethodSymbol(returnType, parameters));
      return;
    }

    SimpleNode thirdChild = (SimpleNode) this.jjtGetChild(2)

    if(thirdChild.id == ParserTreeConstants.JJTRETURN){
      thirdChild.addSymbolTable(this.symbolTable);
      thirdChild.eval();
      this.symbolTable.addSymbol(key, new MethodSymbol(((ASTRETURN) thirdChild).type, parameters);
    }

  }

  public String toString() {
    return "STATIC_IMPORT";
  }
}
/* JavaCC - OriginalChecksum=0ea55270eb33c3d4cca7df9ddcbc14ab (do not edit this line) */
